version: '3'

services:
  zookeeper:
    image: "bitnami/zookeeper:latest"
    container_name: zookeeper1
    hostname: zookeeper1
    restart: unless-stopped
    ports:
      - '2181:2181'
    networks:
      - plc_pipeline_network
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
  
  kafdrop:
    image: "obsidiandynamics/kafdrop"
    container_name: kafdrop
    hostname: kafdrop
    restart: unless-stopped
    ports:
      - "9000:9000"
    networks:
      - plc_pipeline_network
    environment:
        KAFKA_BROKERCONNECT: "kafka:9092"
        JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"

  kafka:
    image: "bitnami/kafka:latest"
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092" #Internal
      - "29092:29092" #External Same Host
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_LISTENERS: "INTERNAL://:9092,EXTERNAL://:29092"
      KAFKA_CFG_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,EXTERNAL://localhost:29092"
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper1:2181"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT, EXTERNAL:PLAINTEXT"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - plc_pipeline_network

networks:
  plc_pipeline_network:
    name: plc_pipeline_network